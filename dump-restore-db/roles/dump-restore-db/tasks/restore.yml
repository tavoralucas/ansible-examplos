---
- name: Download dump from MinIO
  aws_s3:
    s3_url: "{{ s3_url }}"
    bucket: "{{ destination_bucket_name }}"
    object: "{{ context }}/{{ backup_name_in_s3 }}"
    dest: "{{ destination_database_backup_directory }}/dump.tar.gz"
    mode: get
    validate_certs: true
    rgw: true
    encrypt: false
    permission: []
  environment:
    AWS_ACCESS_KEY: "{{ aws_access_key }}"
    AWS_SECRET_KEY: "{{ aws_secret_access_key }}"
  when: destination_bucket_type == "s3"

- name: Install MariaDB
  yum:
    name: mariadb-server
    state: present
  when: install_mariadb|bool == true

- name: Enable and start MariaDB service
  ansible.builtin.systemd:
    name: mariadb
    enabled: yes
    state: started
  when: install_mariadb|bool == true

- name: Wait for MariaDB running port
  wait_for:
    port: 3306
    host: 0.0.0.0
  when: install_mariadb|bool == true

- name: Update mysql root password
  community.mysql.mysql_user:
    name: root
    host: "{{ destination_database_connection_url }}"
    password: "{{ destination_database_root_password }}"
    login_user: root
    login_password: ""
    check_implicit_admin: yes
    priv: "*.*:ALL,GRANT"
  when: install_mariadb|bool == true

- name: Create database user ucloud with all database privileges
  community.mysql.mysql_user:
    name: ucloud
    password: "{{ destination_database_password }}"
    priv: '*.*:ALL'
    state: present
  when: install_mariadb|bool == true

- name: Create ucloud database
  community.mysql.mysql_db:
    login_user: ucloud
    login_password: "{{ destination_database_password }}"
    name: "{{ destination_database_name }}"
    state: present
  when: install_mariadb|bool == true

- name: Restore selected database
  community.mysql.mysql_db:
    login_user: ucloud
    login_password: "{{ destination_database_password }}"
    name: "{{ destination_database_name }}"
    state: import
    target: "{{ destination_database_backup_directory }}/dump.tar.gz"

- name: Remove dump file after use
  ansible.builtin.file:
    path: "{{ destination_database_backup_directory }}/dump.tar.gz"
    state: absent