---
- name: Generate random string
  set_fact:
    suffix: "{{ lookup('password', '/dev/null chars=ascii_lowercase,digits length=8') }}"

- name: Login to ucloud
  uri:
    url: "{{ ucloud_uri }}/{{ api_basepath }}/{{ api_login }}"
    method: POST
    body: '{ "login": "{{ ucloud_login }}", "password": "{{ ucloud_password }}" }'
    status_code: 200
    body_format: json
    return_content: true
  register: token

- name: Edit json
  shell: sh teste.sh

- name: UUID VM
  command: cat results/result.txt
  register: vm_uuid

- name: Create network and attach to VM
  uri:
    url: "{{ ucloud_uri }}/{{ api_basepath }}/vm/{{ vm_uuid.stdout }}/vnic"
    method: POST
    body: "{{ lookup('template','net-teste.json') }}"
    status_code: 200
    body_format: json
    return_content: true
    headers:
      token: "{{ token.content }}"
      accept: "application/json"
      Content-Type: "application/json"
  register: new_network_to_vm

- name: Set network task identifier fact
  set_fact:
   new_network_task_identifier: "{{ new_network_to_vm.content | from_json | json_query(\"ucloudIdentifier\") }}"

- name: Wait until new network created and attached
  uri:
    url: "{{ ucloud_uri }}/{{ api_basepath }}/{{ task_status }}/{{ new_network_task_identifier }}"
    method: GET
    status_code: 200
    body_format: json
    return_content: true
    headers:
      token: "{{ token.content }}"
      accept: "application/json"
  register: task_status
  until: "{{ task_status.content | from_json | json_query(\"status\") }} == 200"
  retries: 30
  delay: 5
